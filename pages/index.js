import Head from 'next/head'
import Image from 'next/image'
import styles from '../styles/Home.module.css'
import pokemonStyles from '../styles/Pokemon.module.css';

import PokedexHeader from '../components/PokedexHeader';

import { getPokemonDetails, setBackgroundColor } from "../utils/pokedexController";
import { artworkBaseUrl } from '../utils/constants';
import { useEffect, useState } from "react";
import { types } from '../utils/constants';
// tooltip
import Tooltip from '@mui/material/Tooltip';
// icons
import InfoOutlinedIcon from '@mui/icons-material/InfoOutlined';
import InfoIcon from '@mui/icons-material/Info';

export default function Home(props) {

  const [pokemon, setPokemon] = useState();
  const [pokemonId, setPokemonId] = useState(1);
  const [update, setUpdate] = useState(false);
  const [showDetails, setShowDetails] = useState(false);
  const [backgroundColor, setBackgroundColor] = useState(types.grass.color);

  useEffect(() => {
    getPokemonDetails(pokemonId, setPokemon);
    // set the background color according to pokemon type
    if (pokemon) { 
      let color = types[pokemon.types[0].type.name].color;
      setBackgroundColor(color);
    }
  }, [update, pokemon, backgroundColor])

  return (
    <div className={styles.container}>
      <Head>
        <title>Pokédex</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <PokedexHeader id={pokemonId} setId={setPokemonId} />

      <div className={pokemonStyles.PokemonContainer} style={{'backgroundColor':backgroundColor}}>
            <div className={pokemonStyles.PokemonContainerHeader}>
                {showDetails ? (
                    <Tooltip title='Hide info' placement='top'>
                        <InfoIcon 
                            className={pokemonStyles.pokedexInfoButton}
                            onClick={() => {
                                setShowDetails(!showDetails);
                            }}
                        />
                    </Tooltip>
                ) : (
                    <Tooltip title='Show info' placement='top'>
                        <InfoOutlinedIcon 
                            className={pokemonStyles.pokedexInfoButton}
                            onClick={() => {
                                setShowDetails(!showDetails);
                            }}
                        />
                    </Tooltip>
                )}
            </div>
        {
            pokemon ? (
                showDetails ? (
                    <div className={pokemonStyles.pokemonDetailsView}>
                        <div className={pokemonStyles.pokemonDetails}>
                            <p>{pokemon.types[0].type.name} type</p>
                            <p>{pokemon.weight/10} kg</p>
                            <p>{pokemon.height/10} m</p>
                            <p>hp {pokemon.stats[0].base_stat}</p>
                            <p>atk {pokemon.stats[1].base_stat}</p>
                            <p>def {pokemon.stats[2].base_stat}</p>
                            <p>spd {pokemon.stats[5].base_stat}</p>
                        </div>
                        <Image src={`${artworkBaseUrl}${pokemon.id}.png`} height={512} width={512} alt='pokémon image' />
                    </div>
                ) : (
                    <Image src={`${artworkBaseUrl}${pokemon.id}.png`} height={512} width={512} alt='pokémon image' />
                )
            ) : (
                <h1>no pokemon found</h1>
            )
        }
      </div>
    </div>
  )
}
